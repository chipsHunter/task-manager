# Парное программирование

## 1. Какую задачу реализовывали?
Мы работали над дальнейшей разработкой проекта. Задача требовала написания тестов для различных модулей. Два человека занимались написанием фрота, два бэком. На фронте улучшена страница добавления тасок, добавлен jwt токен. На бэке реализованны CRUD операции, а также отправка jwt токена. Подход парного программирования позволил нам более эффективно справиться с возникающими трудностями.

## 2. Какой стиль показался более приемлемым? Почему?
Мы попробовали два стиль парного программирования:

- **Ведущий-ведомый** — в этом случае на втором месте, после разработки часто стоит обучение менее опытного программиста, как правило, именно он непосредственно пишет код. Второй программист более опытный, он подсказывает, направляет, дает рекомендации
- **Пинг-понг** — один программист пишет тест, а второй – реализацию под него. После происходит смена ролей.

Лично нам подошел стиль ведущий-ведомый, потому что кто-то знает больше, кто-то меньше и тем кто знает меньше необходима помощь, необходима рассказать что делать и как это делать, позволял некоторым участникам научиться чему-то новому.

## 3. Что получилось? Положительные впечатления
- Каждый научился чему-то новому, те кто подсказывали сами старались лучше разобраться в теме, а те кому подсказывали выучили для себя много нового.
- Быстрее находили ошибки и недочеты.
- Получили новый опыт совместной работы и лучше поняли сильные стороны друг друга.
- Улучшили навыки общения и совместного поиска решений.

## 4. Что не получилось? Как можно это поправить?
- В некоторых моментах возникали задержки из-за того что каждый делал в своё время, и порой без работы одного другую часть сложнее делать.
- Иногда возникало ощущение, что один из участников (я) делает больше работы. Нужно тчательней разделять роли.
- В стиле "Ведущий-ведомый" временами было сложно понять что делает партнёр, приходилось много раз пытаться донести свои мысли, идеи, и способ реализации.

## 5. Будете ли использовать парное программирование для других задач? Каких?
Да, парное программирование полезно если в команде кто-то слабее, этот способ хорошо помогает обучить кого-то (научится чему-то новому) данный способ подходит для:

- Решения сложных алгоритмических задач.
- Лучшего понимания друг друга в команде.
- Обучения и обмена знаниями внутри команды.
-Оценка уровней знаний членов команды

В целом, это был полезный опыт.
